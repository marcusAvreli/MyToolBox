+-------------------------------------------------------+
|										======1======	|
|	MILLISECONDS TO TIMESTAMP							|
|														|
+-------------------------------------------------------+
	select TO_TIMESTAMP('1970-01-01','YYYY-MM-DD HH24:MI:SS')+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') date_from
	,TO_TIMESTAMP('1970-01-01','YYYY-MM-DD HH24:MI:SS')+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') +NUMTODSINTERVAL(1,'HOUR') date_to
	from(
		select min(created) pt_CRTD_DATE from SPT_PROVISIONING_TRANSACTION
	)


+-------------------------------------------------------+
|										======2======	|
|	EVERY 30 MINUTES									|
|														|
+-------------------------------------------------------+ 
   select
		trunc(date_from, 'HH') + round(extract(minute from date_from) / 15) * interval '15' minute
		,trunc(date_to, 'HH') + round(extract(minute from date_to) / 15) * interval '15' minute
		from(
			select TO_TIMESTAMP('1970-01-01','YYYY-MM-DD HH24:MI:SS')+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') date_from
			,TO_TIMESTAMP('1970-01-01','YYYY-MM-DD HH24:MI:SS')+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') +NUMTODSINTERVAL(30,'MINUTE') date_to
			from(
				select min(created) pt_CRTD_DATE from SPT_PROVISIONING_TRANSACTION
				)
		)
		
		
+-------------------------------------------------------+
|										======3======	|
|	EVERY 15 MINUTES									|
|														|
+-------------------------------------------------------+ 
	with testdata as (
	  select
		to_date ('2015-08-12 14:11','YYYY-MM-DD HH24:MI') ft,
		to_date ('2015-08-12 14:11','YYYY-MM-DD HH24:MI') tt
	  from dual
	 )

	select
	to_char(ft - mod((ft - trunc(ft))*24*60, 15)/24/60,'YYYY-MM-DD HH24:MI') ft
	,to_char(tt + (15 - mod((tt - trunc(tt))*24*60, 15))/24/60,'YYYY-MM-DD HH24:MI') tt


	from testdata


	select    to_char(SYSDATE - mod((SYSDATE - trunc(SYSDATE))*24*60, 15)/24/60,'YYYY-MM-DD HH24:MI') ft
	,to_char( SYSDATE + (15 - mod((SYSDATE - trunc(SYSDATE))*24*60, 15))/24/60,'YYYY-MM-DD HH24:MI')
	tt from dual
	

+-------------------------------------------------------+
|										======4======	|
|	ORDINAL NUMBER OF 15 MINUTES PART					|
|														|
+-------------------------------------------------------+ 
	source: https://stackoverflow.com/questions/30920975/create-ranges-of-minutes-15-in-select
	select to_char(sysdate, 'YYYY-MM-DD HH24:MI:SS') as now_time,
	  to_char(sysdate, 'SSSSS') as now_secs,  -- from the beginning of today
	  to_number(to_char(sysdate, 'SSSSS'))/900 as calc1,
	  floor(to_number(to_char(sysdate, 'SSSSS'))/900) as calc2, --index of part if split by 15 minutes
	  floor(to_number(to_char(sysdate, 'SSSSS'))/900) * 900 as calc3
	from dual;


+-------------------------------------------------------+
|										======5======	|
|	STORED_PROCEDURE: SPLIT EVERY DAY BY 15 MINUTES		|
|														|
+-------------------------------------------------------+
	--splits every day by 15 minutes begining from midnight of today till midnight of next day
	--from 13-06-2024 0:00:00 till 14-06-2024 00:00:00
	--its good for anylizing history tables where it starts from any date in the past
	--splitted range is in time_start, time_end
	--time_start: 13-06-2024 00:00:00 time_end: 13-06-2024 00:15:00
	--time_start: 13-06-2024 00:15:00 time_end: 13-06-2024 00:30:00	
	-- ......
	--time_start: 13-06-2024 23:45:00 time_end: 14-06-2024 00:00:00
	
CREATE TABLE "IDENTITYIQ"."TEST_RPRT_PT_LOG"(
   "ID" varchar2(32) PRIMARY KEY NOT NULL,
   "TIME_START" number(19) NOT NULL,
   "TIME_END" number(19) NOT NULL,
   "TIME_START_DAY" number(19) NOT NULL,
   "TIME_END_DAY" number(19) NOT NULL,
   "EX_START_TIME" number(19),
   "EX_END_TIME" number(19),
   "ORDINAL" number(10)
);

create or replace procedure        my_gn_rprt_pt_log
	AS
		today_time_s	number:=0;
		today_time_e	number:=0;
		interval_min	number:=15;
		minDate	number:=0;
		begin_of_all_time	varchar2(12):='1970-01-01';
		millis_base number:=24 * 60 * 60 * 1000;
		date_pattern_ymdhm varchar2(20):='YYYY-MM-DD HH24:MI';
		date_pattern_ymdhms varchar2(25):='YYYY-MM-DD HH24:MI:SS';
		date_pattern_ymd varchar2(20):='YYYY-MM-DD';
		
		begin
		SELECT min(TIME_START) INTO minDate FROM test_RPRT_PT_LOG umtbRprtLogPt;
		if minDate is null then
			--init table data
				insert into test_RPRT_PT_LOG(
					ID
					,TIME_START
					,TIME_END
					,ordinal
					,TIME_START_DAY	--begin of day in milliseconds: 13-06-2024 00:00:00
					,TIME_END_DAY --end of day in milliseconds: 14-06-2024 00:00:00
				)

				select
					test_random_guid()  my_id
					,to_number(to_date(date_start,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base
					,to_number(to_date(date_end,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base
					,floor(to_number(to_char(to_date(date_start,date_pattern_ymdhm), 'SSSSS'))/900) as ordinal
					,to_number(to_date(current_day,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base
					,to_number(to_date(next_day,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base
				from(
					select
						to_char(date_from - mod((date_from - trunc(date_from))*24*60, interval_min)/24/60,date_pattern_ymdhm) date_start
						,to_char( date_from + (interval_min - mod((date_from - trunc(date_from))*24*60, interval_min))/24/60,date_pattern_ymdhm) date_end
						,TO_CHAR (trunc(current_day, 'DD'),               date_pattern_ymdhms) current_day
						,TO_CHAR (trunc(next_day, 'DD'),              date_pattern_ymdhms) next_day
					FROM(
						select 
							TO_DATE(TO_CHAR(TO_TIMESTAMP(begin_of_all_time,date_pattern_ymdhms)+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND'),date_pattern_ymdhms),date_pattern_ymdhms) date_from
							,TO_TIMESTAMP(begin_of_all_time,date_pattern_ymdhms)+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') current_day
							,TO_TIMESTAMP(begin_of_all_time,date_pattern_ymdhms)+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') +NUMTODSINTERVAL(1,'DAY') next_day
						FROM(
								select MIN(created) pt_CRTD_DATE from SPT_PROVISIONING_TRANSACTION
							)
						)
				);

					commit;

			else
					--init variable today_time_s
					select    to_number(to_date(ft,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base into today_time_s
					from(
						select    to_char(SYSDATE - mod((SYSDATE - trunc(SYSDATE))*24*60, interval_min)/24/60,date_pattern_ymdhm) ft    from dual
					);

					--init variable today_time_e
					select    to_number(to_date(tt,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base into today_time_e
					from(
						select    to_char( SYSDATE + (interval_min- mod((SYSDATE - trunc(SYSDATE))*24*60, interval_min))/24/60,date_pattern_ymdhm) tt  from dual
					); 

					INSERT ALL
						INTO test_RPRT_PT_LOG( 
							ID
							,TIME_START
							,TIME_END
							,ordinal
							,TIME_START_DAY
							,TIME_END_DAY) 
						VALUES (
							my_guid
							,time_start
							,time_end
							,ordinal
							,time_start_day
							,time_end_day
						)

					WITH source_data AS(

						select
							test_random_guid()  my_guid
							,to_number(to_date(date_start,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base time_start
							,to_number(to_date(date_end,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base time_end
							,floor(to_number(to_char(to_date(date_start,date_pattern_ymdhm), 'SSSSS'))/900) as ordinal
							,to_number(to_date(current_day,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base time_start_day
							,to_number(to_date(next_day,date_pattern_ymdhms)   - to_date(begin_of_all_time,date_pattern_ymd)) * millis_base time_end_day
						from(
							select
								to_char(date_from - mod((date_from - trunc(date_from))*24*60, 15)/24/60,'YYYY-MM-DD HH24:MI') date_start
								,to_char( date_from + (15 - mod((date_from - trunc(date_from))*24*60, 15))/24/60,'YYYY-MM-DD HH24:MI') date_end
								,TO_CHAR (trunc(current_day, 'DD'),               date_pattern_ymdhms) current_day
								,TO_CHAR (trunc(next_day, 'DD'),                date_pattern_ymdhms) next_day
							from(
								select
									TO_DATE(TO_CHAR(TO_TIMESTAMP(begin_of_all_time,date_pattern_ymdhms)+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND'),date_pattern_ymdhm),date_pattern_ymdhms) date_from
									,TO_TIMESTAMP(begin_of_all_time,date_pattern_ymdhms)+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') current_day
									,TO_TIMESTAMP(begin_of_all_time,date_pattern_ymdhms)+NUMTODSINTERVAL(pt_CRTD_DATE/1000,'SECOND') +NUMTODSINTERVAL(1,'DAY') next_day
								from(
									select max(TIME_END) pt_CRTD_DATE from .test_RPRT_PT_LOG where TIME_END < today_time_s
								)
							)
						)

					)--end of source_data_set

                SELECT 
					my_guid
					,time_start
					,time_end
					,ordinal
					,time_start_day
					,time_end_day
                FROM   source_data src
                WHERE  NOT EXISTS (
					SELECT 1 FROM   test_RPRT_PT_LOG dest
					WHERE  src.time_start = dest.time_start
                );

				commit;

		end if;

end my_gn_rprt_pt_log;