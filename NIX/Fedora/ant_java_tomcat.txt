+-----------------------------------------------------------+
|															|
|			JAVA ENVIRONMENTAL VARIABLES					|
|															|
+-----------------------------------------------------------+
	echo 'export JAVA_HOME=/opt/jdk' >> /etc/profile;		
	echo 'export PATH=${PATH}:${JAVA_HOME}/bin' >> /etc/profile;
	source /etc/profile

#CHECK JAVA_HOME
	echo $JAVA_HOME
		/usr/local/java/jdk1.8.0_341
		
#ANT FROM SOURCE
	tar -zxvf apache-ant-1.10.13-src.tar.gz;
	mv apache-ant-1.10.13 ant;
	mv ant /opt/
	cd /opt/ant; 

	./build.sh -Ddist.dir=/opt/ant dist	
+-----------------------------------------------------------+
|															|
|			ANT ENVIRONMENTAL VARIABLES						|
|															|
+-----------------------------------------------------------+
	echo 'export ANT_HOME="/opt/ant"' >> /etc/profile
	echo 'export PATH=$PATH:$ANT_HOME/bin' >> /etc/profile
	source /etc/profile
	
#TOMCAT FORM SOURCE
	tar -zxvf apache-tomcat-9.0.73-src.tar.gz
	mv apache-tomcat-9.0.73-src tomcat90Source
	cd tomcat90Source
	ant
	#result server is in output/build
	mkdir /opt/tomcat
	cp -r output/build/*	/opt/tomcat

#USERS AND PERMISSIONS
	
	
	useradd -r -s /bin/false tomcat
	groupadd --system tomcat
	
	#We put the tomcat user as the owner of the folder of tomcat:
	chown -R tomcat:tomcat /opt/tomcat
	
	#Users can not modify the configuration of tomcat:
	chmod -R g+r /opt/tomcat/conf
	
	#Users can modify the other folders:

		chmod -R g+w /opt/tomcat/logs;
		chmod -R g+w /opt/tomcat/temp;
		chmod -R g+w /opt/tomcat/webapps;
		#chmod -R g+w /opt/tomcat/work;
	#Activate the sticky-bit for new files keep permissions defined:
		chmod -R g+s /opt/tomcat/conf
		chmod -R g+s /opt/tomcat/logs
		chmod -R g+s /opt/tomcat/temp
		chmod -R g+s /opt/tomcat/webapps
		chmod -R g+s /opt/tomcat/work
	#Finally, we add the tomcat group we want users who can use the tomcat:
		usermod -a -G tomcat root


#FIREWALL
	firewall-cmd  --add-port=8080/tcp
	firewall-cmd --runtime-to-permanent
	firewall-cmd --reload


#LOGROTATE 
	#conf
		vi /etc/logrotate.conf
	
	
	#define logrotate
		vi /etc/logrotate.d/tomcat
		/opt/tomcat90/logs/catalina.out {
			su root tomcat
			copytruncate
			daily
			rotate 8
			compress
			missingok
			maxsize 1G
			create 0644 tomcat tomcat
		} 

	#verify tomcat rotate works
		logrotate /etc/logrotate.d/tomcat
		
#ADD TOMCAT AS SERVICE
	refer tomcat.service file
		
#COPYRIGHT:
	https://superuser.com/questions/632618/best-practice-for-access-permission-to-users-for-apache-tomcat

+-----------------------------------------------------------+
|															|
|			TOMCAT SYSTEMD SERVICE							|
|															|
+-----------------------------------------------------------+


# Systemd unit file for tomcat
#place in /etc/systemd/system/tomcat.service
#source:
#https://stackoverflow.com/questions/53994521/tomcat-8-on-centos-7-does-not-start-as-service-but-it-starts-manually
#https://www.shubhamdipt.com/blog/how-to-create-a-systemd-service-in-linux/
#systemctl daemon-reload
#systemctl restart tomcat.service
[Unit]
Description=Apache Tomcat Web Application Container for ShopWorx
After=syslog.target network.target

[Service]
Environment=JAVA_HOME=/usr/local/java/jdk1.8.0_341
Environment=CATALINA_PID=/opt/tomcat90/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat90/
Environment=CATALINA_BASE=/opt/tomcat90/
Environment='CATALINA_OPTS=-Xms512M -Xmx4096M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'
Type=forking
WorkingDirectory=/opt/tomcat90/bin

ExecStart=/usr/bin/bash /opt/tomcat90/bin/catalina.sh start
ExecStop=/usr/bin/bash /opt/tomcat90/bin/catalina.sh stop

User=root
Group=tomcat

[Install]
WantedBy=multi-user.target
