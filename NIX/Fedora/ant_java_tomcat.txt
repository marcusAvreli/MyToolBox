+-------------------------------------------------------+
|									======1_of_9======	|
|	INSTALL JAVA										|
|														|
+-------------------------------------------------------+
	tar -zxvf jdk-17.0.11_linux-x64_bin.tar.gz
	mv jdk-17.0.11 /opt


+-------------------------------------------------------+
|									======2_of_9======	|
|	JAVA ENVIRONMENTAL VARIABLES						|
|														|
+-------------------------------------------------------+
	echo 'export JAVA_HOME=/opt/jdk' >> /etc/profile;		
	echo 'export PATH=${PATH}:${JAVA_HOME}/bin' >> /etc/profile;
	source /etc/profile

#CHECK JAVA_HOME
	echo $JAVA_HOME
		/usr/local/java/jdk1.8.0_341
		


+-------------------------------------------------------+
|									======3_of_9======	|
|	INSTALL ANT											|
|														|
+-------------------------------------------------------+
	COPYRIGHT: https://fr.linuxfromscratch.org/view/blfs-8.2-fr/general/apache-ant.html
	curl -L 	https://dlcdn.apache.org//ant/source/apache-ant-1.10.15-src.tar.gz --output apache-ant-1.10.15-src.tar.gz

	tar -zxvf apache-ant-1.10.15-src.tar.gz
	
	
	./bootstrap.sh
	bootstrap/bin/ant -f fetch.xml -Ddest=system || true && cp -v lib/*.jar lib/optional/
	./build.sh -Ddist.dir=$PWD/apache-ant-1.10.15 dist
	 

	
	
+-------------------------------------------------------+
|									======4_of_9======	|
|			ANT ENVIRONMENTAL VARIABLES					|
|														|
+-------------------------------------------------------+
	echo 'export ANT_HOME="/opt/ant/apache-ant-1.10.15"' >> /etc/profile
	echo 'export PATH=${PATH}:${ANT_HOME}/bin' >> /etc/profile
	source /etc/profile


+-------------------------------------------------------+
|									======5_of_9======	|
|	INSTALL TOMCAT										|
|														|
+-------------------------------------------------------+
	curl -L 	https://archive.apache.org/dist/tomcat/tomcat-9/v9.0.73/src/apache-tomcat-9.0.73-src.tar.gz --output apache-tomcat-9.0.73-src.tar.gz
	tar -zxvf apache-tomcat-9.0.73-src.tar.gz //RUNS ON JAVA 11+
	tar -zxvf apache-tomcat-9.0.98-src.tar.gz //runs ON java 17+
	
	mv  apache-tomcat-9.0.73-src tomcat90Source
	cd tomcat90Source
	ant		
	
	mkdir /opt/tomcat90
	#result server is in output/build
	cp -r output/build/*	/opt/tomcat90	


+-------------------------------------------------------+
|									======6_of_9======	|
|	USERS AND PERMISSIONS								|
|														|
+-------------------------------------------------------+
	useradd -r -s /bin/false tomcat &&	groupadd --system tomcat
	
	#We put the tomcat user as the owner of the folder of tomcat:
	chown -R tomcat:tomcat /opt/tomcat90
	
	#Users can not modify the configuration of tomcat:
	chmod -R g+r /opt/tomcat90/conf
	
	#Users can modify the other folders:

		chmod -R g+w /opt/tomcat90/logs;
		chmod -R g+w /opt/tomcat90/temp;
		chmod -R g+w /opt/tomcat90/webapps;
		#chmod -R g+w /opt/tomcat/work;
	#Activate the sticky-bit for new files keep permissions defined:
		chmod -R g+s /opt/tomcat90/conf
		chmod -R g+s /opt/tomcat90/logs
		chmod -R g+s /opt/tomcat90/temp
		chmod -R g+s /opt/tomcat90/webapps
		chmod -R g+s /opt/tomcat90/work
	#Finally, we add the tomcat group we want users who can use the tomcat:
		usermod -a -G tomcat root


+-------------------------------------------------------+
|									======7_of_9======	|
|	FIREWALL											|
|														|
+-------------------------------------------------------+
	firewall-cmd  --add-port=8080/tcp
	firewall-cmd --runtime-to-permanent
	firewall-cmd --reload
	

+-------------------------------------------------------+
|									======8_of_9======	|
|	LOGROTATE											|
|														|
+-------------------------------------------------------+
	#conf
		vi /etc/logrotate.conf	
	
	#define logrotate
		vi /etc/logrotate.d/tomcat
		/opt/tomcat90/logs/catalina.out {
			su root tomcat
			copytruncate
			daily
			rotate 8
			compress
			missingok
			maxsize 1G
			create 0644 tomcat tomcat
		} 

	#verify tomcat rotate works
		logrotate /etc/logrotate.d/tomcat
		
#ADD TOMCAT AS SERVICE
	refer tomcat.service file
		
#COPYRIGHT:
	https://superuser.com/questions/632618/best-practice-for-access-permission-to-users-for-apache-tomcat

+-------------------------------------------------------+
|									======9_of_9======	|
|			TOMCAT SYSTEMD SERVICE						|
|														|
+-------------------------------------------------------+

# https://unix.stackexchange.com/questions/675521/make-systemd-service-inherit-environment-variables-from-etc-profile-d
# Systemd unit file for tomcat
#place in /etc/systemd/system/tomcat.service
#source:
#https://stackoverflow.com/questions/53994521/tomcat-8-on-centos-7-does-not-start-as-service-but-it-starts-manually
#https://www.shubhamdipt.com/blog/how-to-create-a-systemd-service-in-linux/
#systemctl daemon-reload
#systemctl restart tomcat.service
[Unit]
Description=Apache Tomcat Web Application Container for ShopWorx
After=syslog.target network.target

[Service]
Environment=JAVA_HOME=/opt/jdk
Environment=CATALINA_PID=/opt/tomcat90/temp/tomcat.pid
Environment=CATALINA_HOME=/opt/tomcat90/
Environment=CATALINA_BASE=/opt/tomcat90/
Environment='CATALINA_OPTS=-Xms512M -Xmx4096M -server -XX:+UseParallelGC'
Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'
Type=forking
WorkingDirectory=/opt/tomcat90/bin

ExecStart=/usr/bin/bash /opt/tomcat90/bin/catalina.sh start
ExecStop=/usr/bin/bash /opt/tomcat90/bin/catalina.sh stop

User=root
Group=tomcat

[Install]
WantedBy=multi-user.target



+-------------------------------------------------------+
|									======10_of_10=====	|
|			HARDENING									|
|														|
+-------------------------------------------------------+


rm -rf /opt/tomcat90/webapps/examples/ /opt/tomcat90/webapps/manager/ /opt/tomcat90/webapps/host-manager/ /opt/tomcat90/webapps/docs/

 

cd /opt/tomcat90/webapps/ROOT

	1. remove all files BUT NOT WEB-INF		
		--list
		find . -maxdepth 1 -type f -print
		--remove
		#find . -maxdepth 1 -type f -print0 | xargs -0 rm
		
	2. ADD index.jsp with the following content:
		<% response.sendRedirect("/iiq"); %>

 

 

       vi /opt/tomcat90/webapps/<web-app>/WEB-INF/web.xml

              <session-config>  

                     <tracking-mode>COOKIE</tracking-mode>

                     <cookie-config>

                           <http-only>true</http-only>

                           <secure>true</secure>

                     </cookie-config>

              </session-config>
			  
	

APACHE ANT
##http://www.techoism.com/how-to-install-apache-ant-on-centos/
cd /opt
wget http://www.us.apache.org/dist/ant/binaries/apache-ant-1.9.11-bin.tar.gz
tar -zxvf apache-ant-1.9.11-bin.tar.gz
mv /opt/apache-ant-1.9.11 /opt/ant

sh -c 'echo ANT_HOME=/opt/ant >> /etc/environment'
ln -s /opt/ant/bin/ant /usr/bin/ant

ant -version



	
curl -L 	https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/javax/media/jai-core/1.1.3/jai-core-1.1.3.jar --output jai-core-1.1.3.jar

curl -L 	https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/com/sun/media/jai-codec/1.1.3/jai-codec-1.1.3.jar  --output jai-codec-1.1.3.jar

curl -L 	https://mvnrepository.com/artifact/org.tukaani/xz/1.0/xz-1.0.jar  --output xz-1.0.jar 

curl -L 	http://www.netrexx.org/files/NetRexx-3.06-GA.zip  --output NetRexx-3.06-GA.zip	  
Apache ANT
https://github.com/hamcrest/JavaHamcrest/commit/2df96c1357e996e3b522aae13e3cd67c4194ef93
Disable doclint in javadoc build, so that it works on JDK 1.8. See isâ€¦
destdir="build/temp/@{modulename}-${version}-javadoc.jar.contents" author="true" version="true"
                     use="true" windowtitle="Hamcrest" source="${javaversion}" failonerror="yes" defaultexcludes="yes">
                <classpath refid="cp-@{modulename}-main"/>
                <arg value="-Xdoclint:none"/>
            </javadoc>
            <jar-module-component modulename="@{modulename}" suffix="-javadoc"/>
        </sequential>

Linne 1482<arg value="-Xdoclint:none"/>

http://fr.linuxfromscratch.org/view/blfs-8.2-fr/general/apache-ant.html
cp -v ../jai-core-1.1.3.jar  \
      ../jai-codec-1.1.3.jar \
      ../xz-1.0.jar  lib     &&
unzip -p ../NetRexx-3.06-GA.zip lib/NetRexxC.jar > lib/NetRexxC.jar
Construct a limited bootstrap version of Apache Ant with the following command:

./bootstrap.sh
Download the rest of the runtime dependencies with the build script ant fetch.xml :

bootstrap/bin/ant -f fetch.xml -Ddest=system || true &&
cp -v lib/*.jar lib/optional/
Build Apache Ant by running the following commands:

./build.sh -Ddist.dir=$PWD/ant-1.10.2 dist
Install, as a user root.

cp -rv ant-1.10.2 /opt/            &&
chown -R root:root /opt/ant-1.10.2 &&
ln -sfv ant-1.10.2 /opt/ant

Configuration information
Some packages will require that ant be in the search path and that the variable ANT_HOME be set. Satisfy these requirements by typing as a user root :

cat > /etc/profile.d/ant.sh << EOF
# Begin /etc/profile.d/ant.sh

pathappend /opt/ant/bin
export ANT_HOME=/opt/ant

# End /etc/profile.d/ant.sh
EOF
export PATH=$PATH:$ANT_HOME/bin
export ANT_HOME=$ANT_HOME:/opt/ant-1.10.2