# $NetBSD: host-npf.conf,v 1.7 2014/05/31 11:54:37 spz Exp $
#
# this is an example of NPF rules for a host (i.e., not routing) with
# two network interfaces, wired and wifi
#
# it does both IPv4 and IPv6 and allows for DHCP in v4 and SLAAC in v6
# it also does IPSEC on the wifi
#

$wired_if = "vmx0"
$wired_v4 = { inet4(vmx0) }

# sample udp service
$services_udp = { ntp }

# watching a tcpdump of npflog0, when it only logs blocks,
# can be very helpful for building the rules you actually need
procedure "log" {
     log: npflog0
}
$services_tcp = {8080 }
# make a service running on a high port on 127.0.0.1 available on $wired_if
# see also the pass rules below
map $wired_if dynamic 127.0.0.1 port 8080 <- $wired_v4 port 80

group "wired" on $wired_if {

	# not being picky about our own address here

	pass in  final family inet4 proto icmp      all	

	pass in final family inet4 proto tcp to $wired_v4 port ssh

	# the port mapping
	# Note the filter sees packets before translation
#tomcat
	pass in  final family inet4 proto tcp from any to $wired_v4 port 8080
	pass out final family inet4 proto tcp from 127.0.0.1 port 8080 to any
#tomcat shutdown port
	pass in  final family inet4 proto tcp from any to $wired_v4 port 8005
	pass out final family inet4 proto tcp from 127.0.0.1 port 8005 to any
#mysql
	pass in  final family inet4 proto tcp from any to $wired_v4 port 3306
	pass out final family inet4 proto tcp from 127.0.0.1 port 3306 to any
#sshd
	pass in final family inet4 proto tcp from any to $wired_v4 port 22
	pass out final family inet4 proto tcp from 127.0.0.1 port 22 to any

	# only SYN packets need to generate state
	pass stateful out final family inet4 proto tcp flags S/SA from $wired_v4
	# pass the other tcp packets without generating extra state

	pass out final family inet4 proto tcp from $wired_v4

	# all other types of traffic, generate state per packet

	pass stateful out final family inet4 from $wired_v4

}


group default {
	pass final on lo0 all
	block all apply "log"
}

