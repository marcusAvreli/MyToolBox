Clone existing public git repository
	git clone https://github.com/doctral/Medium-Module-Loading-Strategies.git

+-------------------------------------------------------+
|										======1_OF_8===	|
|	ADD ALL FILES USING GIT ADD EXCEPT ONE DIRECTORY	|
|														|
+-------------------------------------------------------+
	https://stackoverflow.com/questions/50316434/add-all-files-using-git-add-except-one-directory
	git add -- . :!"node_modules"
	git add . -- ':!somefolder' ':!**/some_deep_nested_folder/*'


+-------------------------------------------------------+
|										======2_OF_8===	|
|	GITIGNORE											|
|														|
+-------------------------------------------------------+
//https://stackoverflow.com/questions/2545602/how-can-i-git-ignore-subfolders-subdirectories
	echo "node_modules/" >> .gitignore
	echo "**/node_modules/*"  >> .gitignore

+-------------------------------------------------------+
|										======2_OF_8===	|
|	REMOVE THE FILE/DIRECTORY							|
|														|
+-------------------------------------------------------+

	##FILE	
		git rm file1.txt 
		git commit -m "remove file1.txt"
	##DIRECTORY
		git rm -r one-of-the-directories // This deletes from filesystem
		git commit . -m "Remove duplicated directory"


+-------------------------------------------------------+
|										======3_OF_8===	|
|	REMOVE THE FILE/DIRECTORY FROM REMOTE ONLY			|
|														|
+-------------------------------------------------------+
	https://stackoverflow.com/questions/6313126/how-do-i-remove-a-directory-from-a-git-repository
	##FILE
		git rm --cached file1.txt git commit -m "remove file1.txt"
	##DIRECTORY
		git rm -r --cached myFolder


+-------------------------------------------------------+
|										======4_OF_8===	|
|					WINDOWS								|
|														|
+-------------------------------------------------------+

INIT GIT CONNECTION

	install openssl

	set OPENSSL_HOME=C:\Users\user\openssl\x64
	set OPENSSL_CONF=%OPENSSL_HOME%\ssl\openssl.cnf
	set PATH=%OPENSSL_HOME%\bin;%PATH%
	cd /d %OPENSSL_HOME%
	openssl version -a

	echo -n | openssl s_client -connect www.github.com:443 | openssl x509 > C:\Users\user\github.com.cert
	git config --global http.sslCAInfo C:\Users\user\github.com.cert


	git config --global user.email "<MAIL@exmaple.com>"
	git config --global user.name "username"

git clone <path.to.repo>


+-------------------------------------------------------+
|										======5_OF_8===	|
|	CONFIGURE GIT TO USE CERTIFICATE					|
|														|
+-------------------------------------------------------+

	Get certificate
		by_openssl: echo -n | openssl s_client -connect www.github.com:443 | openssl x509 > /etc/openssl/certs/github.com.cert
		by_java: keytool -J-Djava.net.useSystemProxies=true -printcert -rfc -sslserver www.github.com:443 > github.pem
		
	Set configuration (Set git to trust this certificate)
		git config --global http.sslCAInfo /etc/openssl/certs/github.com.cert
		
		in case that you work with chained certificate
		git config --global http.sslCAInfo /<here goes CA certificate (root)>

	if you already set your git to ignorance of ssl certificates, unset it:
		git config --global --unset http.sslVerify
		
	Verify, that you did it all correctly, without spelling errors:
		git config --global --list
		
	
	debugging
		curl --http1.1 --ntlm <http> | less

		curl --negotiate  <http>
		
		GIT_TRACE=1 git clone <http>

		GIT_CURL_VERBOSE=1 git clone <http>

	CHECK SECURED CONNECTIVITY TO TFS
		curl -v --capath  "abs_path_to_directory" repo_url
		curl -v --cacert  "<abs_path_to_pem_file>" repo_url

 
 
		
Using personal access token
	first time commit ever
	git config --global user.email "<your valid email"
	git config --global user.name "<your name>"

	generate token

	git config --global credential.helper store
	Username for 'https://github.com': username
	Password for 'https://username@github.com': <PAT>


+-------------------------------------------------------+
|										======6_OF_8===	|
|					ERROR								|
|														|
+-------------------------------------------------------+
fatal: unable to access '<http path to repo>.git/': SSL certificate problem: unable to get local issuer certificate

19-03-2024 solved by install github.com certificate
see: Configure git to use certificate

git push origin master
remote: Invalid username or password.
fatal: Authentication failed for '<repository name>'

How to fix it

https://github.com/settings/tokens generated token
Copy the Personal Access Token
Make authentication through browser




Error message:
	ensure that no other process has an open file handle on the lock file
Solution:
		taskkill /F /IM git.exe
	On linux/unix/gitbash/cygwin, try
		rm -f .git/index.lock
	On Windows Command Prompt, try:
		del .git\index.lock


+-------------------------------------------------------+
|										======7_OF_8===	|
|	PRINT COMMIT LOG									|
|														|
+-------------------------------------------------------+
	https://stackoverflow.com/questions/3631005/git-log-tabular-formatting
	git log --since='Apr 1 2021' --until='Apr 4 2021' --pretty=format:"%C(magenta)%h %C(cyan)%C(bold)%ad%Creset %C(cyan)%cr%Creset%x09 | %s %C(green)%Creset" --date=short


+-------------------------------------------------------+
|										======8_OF_8===	|
|	CLEAR CACHE											|
|														|
+-------------------------------------------------------+	
	
	git rm -r --cached .
	git add .
	git commit -am 'git cache cleared'
	git push


	git reset HEAD^ --hard

https://stackoverflow.com/questions/41863484/clear-git-local-cache