Clone existing public git repository
	git clone https://github.com/doctral/Medium-Module-Loading-Strategies.git


Error message:
	ensure that no other process has an open file handle on the lock file
Solution:
		taskkill /F /IM git.exe
	On linux/unix/gitbash/cygwin, try
		rm -f .git/index.lock
	On Windows Command Prompt, try:
		del .git\index.lock

If you want to remove the file from the Git repository and the filesystem, use:
	git rm file1.txt 
	git commit -m "remove file1.txt"
But if you want to remove the file only from the Git repository and not remove it from the filesystem, use:
	git rm --cached file1.txt git commit -m "remove file1.txt"
And to push changes to remote repo
	git push origin branch_name


+-----------------------------------------------------------+
|															|
|					Windows									|
|															|
+-----------------------------------------------------------+

INIT GIT CONNECTION

	install openssl

	set OPENSSL_HOME=C:\Users\user\openssl\x64
	set OPENSSL_CONF=%OPENSSL_HOME%\ssl\openssl.cnf
	set PATH=%OPENSSL_HOME%\bin;%PATH%
	cd /d %OPENSSL_HOME%
	openssl version -a

	echo -n | openssl s_client -connect www.github.com:443 | openssl x509 > C:\Users\user\github.com.cert
	git config --global http.sslCAInfo C:\Users\user\github.com.cert


	git config --global user.email "<MAIL@exmaple.com>"
	git config --global user.name "username"

git clone <path.to.repo>



Configure git to use certificate

	Get certificate
		by_openssl: echo -n | openssl s_client -connect www.github.com:443 | openssl x509 > /etc/openssl/certs/github.com.cert
		by_java: keytool -J-Djava.net.useSystemProxies=true -printcert -rfc -sslserver www.github.com:443 > github.pem
		
	Set configuration (Set git to trust this certificate)
		git config --global http.sslCAInfo /etc/openssl/certs/github.com.cert
		
		in case that you work with chained certificate
		git config --global http.sslCAInfo /<CA certificate <root>)>

	if you already set your git to ignorance of ssl certificates, unset it:
		git config --global --unset http.sslVerify
		
	Verify, that you did it all correctly, without spelling errors:
		git config --global --list
		
Using personal access token
	first time commit ever
	git config --global user.email "<your valid email"
	git config --global user.name "<your name>"

	generate token

	git config --global credential.helper store
	Username for 'https://github.com': username
	Password for 'https://username@github.com': <PAT>


git push origin master
remote: Invalid username or password.
fatal: Authentication failed for '<repository name>'

How to fix it

https://github.com/settings/tokens generated token
Copy the Personal Access Token
Make authentication through browser

https://stackoverflow.com/questions/50316434/add-all-files-using-git-add-except-one-directory
git add -- . :!"node_modules"
git add . -- ':!somefolder' ':!**/some_deep_nested_folder/*'



+-----------------------------------------------------------+
|															|
|					ERROR									|
|															|
+-----------------------------------------------------------+
fatal: unable to access '<http path to repo>.git/': SSL certificate problem: unable to get local issuer certificate

19-03-2024 solved by install github.com certificate
see: Configure git to use certificate

