+-------------------------------------------------------+
|									======1_OF_5======	|
|			POWERSHELL									|
|														|
+-------------------------------------------------------+
function IsTeudatZehut{
    [CmdletBinding()]
    param(
        #[Parameter(Mandatory=$True)]
        [string]$TeudatZehut
    )

	$CharArray = $TeudatZehut.ToCharArray()
	$sum=0
	$size = $CharArray.length
	$converted = [int[]]::new($size)
	$supportString = 1,2,1,2,1,2,1,2,1

	for($i=0; $i -lt $size; $i++){
					$converted[$i]=[int][string]$CharArray[$i]
	}

	for($i=0;$i -lt $size;$i++){                             
		$item = $converted[$i]*$supportString[$i]
		$round = [math]::floor(($item/10))
		$sum+=$round+($item%10)
	}

	if($sum%10 -eq 0){
		return $True
	}else{
		return $False
	}
	return $True
}


+-------------------------------------------------------+
|									======2_OF_5======	|
|			JAVA										|
|														|
+-------------------------------------------------------+
public boolean isTeudatZehut(String testIdNum){
	boolean validTZ=false;
	char[] arrayString=testIdNum.toCharArray();
	int sum=0;
	if(Util.isNotNullOrEmpty(testIdNum)){         
		int size=arrayString.length;
		int[] arrConverted=new int[size];
		int[] supportString=new int[]{1,2,1,2,1,2,1,2,1};
		for(int i=0;i<size;i++){
			 arrConverted[i]=Integer.parseInt(arrayString[i].toString());
		}
		for(int i=0;i<size;i++){         
		int item=arrConverted[i]*supportString[i];           
		sum+=(((item/10)+(item%10)));
		testDebug("devide " +(item/10) + " modulo " +               (item%10));
		}             
		if(sum%10==0){
			 validTZ=true;
		}
		if(sum%10!=0){
			 validTZ=false;
		}
   }
   return  validTZ;
}


+-------------------------------------------------------+
|									======3_OF_5======	|
|			ORACLE										|
|														|
+-------------------------------------------------------+
create or replace FUNCTION is_teudat_zehut(
	in_Teudat_Zehut in varchar2
)

RETURN number

as

  type t_num is table of number;
  num t_num  := t_num(9);
  testresult number;
  v_length number(10);
  v_out_char varchar2(1);
  v_out_number number(1);
  item number;
  sum_of_items number:=0;

begin

v_length := length(in_Teudat_Zehut);

if v_length = 9 then

	  -- fill collection from query

	  num.extend(9);
	  num(1) := 1;
	  num(2) := 2;
	  num(3) := 1;
	  num(4) := 2;
	  num(5) := 1;
	  num(6) := 2;
	  num(7) := 1;
	  num(8) := 2;
	  num(9) := 1;
	  for i in 1..v_length
	  loop
		v_out_char  := substr(in_Teudat_Zehut,i,1) ;
		v_out_number :=To_Number(v_out_char);
		item := v_out_number*num(i);
		sum_of_items :=sum_of_items+ trunc(item/10)+mod(item,10);
	  end loop;

	  if mod(sum_of_items,10)=0 then
		testresult :=1;
	  else
		testresult :=0;
	  end if;
  
else
	testresult :=0;
end if;
return testresult;
   EXCEPTION
	WHEN others THEN
		return 0;
end;

+-------------------------------------------------------+
|									======4_OF_5======	|
|			mySQL										|
|														|
+-------------------------------------------------------+


START TRANSACTION;
DROP function IF EXISTS is_teudat_zehut;
DELIMITER $$
CREATE FUNCTION `is_teudat_zehut`(
 inTeudatZehut varchar(9)
) RETURNS int
    DETERMINISTIC
BEGIN
    DECLARE area INT;
	 DECLARE cont INTEGER; 
	 DECLARE inTzChar VARCHAR(1);
	 declare inTzDigit INTEGER;
	 DECLARE tzInteger INTEGER;
	 DECLARE total_length INTEGER; 
	 declare sum_of_items  INTEGER;
	  declare testresult  INTEGER;
    SET cont = 1;
	 SET testresult = -1;
	DROP  TEMPORARY TABLE IF EXISTS array_table;
	CREATE TEMPORARY TABLE array_table (idx INT, value INT);
	INSERT INTO array_table (idx, value) VALUES (1,1)
	,(2,2)
	,(3,1)
	,(4,2)
	,(5,1)
	,(6,2)
	,(7,1)
	,(8,2)
	,(9,1);
	SET total_length = (select count(*) from array_table);
    SET area = 16;
	 SET sum_of_items = 0;
	
	 WHILE cont < total_length+1 DO
	SET inTzChar = substring(inTeudatZehut,cont,1);
	set inTzDigit = convert(inTzChar , unsigned );
	  SET tzInteger = (SELECT value FROM array_table WHERE idx = cont);
	 set sum_of_items = sum_of_items + ((inTzDigit*tzInteger) div 10)+mod(inTzDigit*tzInteger,10);
	 
	
	  SET cont = cont + 1; 
    END WHILE; 
	
	 if mod(sum_of_items,10)=0 then
	 -- yes, it is teudat zehut
		set testresult =1;
	  else
		set testresult =0;
	  end if;
    RETURN testresult;
END$$

DELIMITER ;
COMMIT;




+-------------------------------------------------------+
|									======3_OF_5======	|
|			AWK											|
|														|
+-------------------------------------------------------+

#!/usr/bin/awk -f

function isnumeric(x){
    switch (typeof(x)) {
    case "strnum":
    case "number":
        return 1;
        break;
        case "string":
        break;
    default:
        return 0;
    }
    return 0;
}

function isTeudatZehut(inputValue){
	sum=0;
	split("1,2,1,2,1,2,1,2,1",support_array,",")
	split(inputValue,arrayTZ,"")

	for (tmp2 in arrayTZ) {
		item = arrayTZ[tmp2] * support_array[tmp2]
		sum+=(((int(item/10))+(item%10)))
	}
	if(sum%10==0){
			return 0;
	}

	return 1;
}


NR>1{
	new_var=isnumeric($1)
	if(new_var==1){
		if(isTeudatZehut($1)==0){
			print "yes";
		}
	}
}

