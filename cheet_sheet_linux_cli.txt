+-----------------------------------------------------------+
|															|
|	LOG OUTPUT OF SH SCRIPT									|
|															|
+-----------------------------------------------------------+
	strace -o mylog.txt -f -e trace=file ./startup.sh
	

+-----------------------------------------------------------+
|															|
|	CHECK KERBEROS CONNECTIVITY								|
|															|
+-----------------------------------------------------------+
	env KRB5_TRACE=/pathToLog/krb5.log 
	kinit -V
	kinit -p <username>@domain.name
	

+-----------------------------------------------------------+
|															|
|	DELETE FILES BY EXTENSION								|
|															|
+-----------------------------------------------------------+
	#List file to be deleted
		find . -name "*.bak" -type f

	#Delete files
		find . -name "*.bak" -type f -delete


+-----------------------------------------------------------+
|															|
|	DELETE FILES BY DATE OF CHANGE RANGE					|
|															|
+-----------------------------------------------------------+
	#List files that were modified between dates
		find . -type f -newermt '01 jan 2009 00:00:00' -not -newermt '01 jan 2012 00:00:00' -ls

	#Delete files that were modified between dates
		find . -type f -newermt '01 jan 2009 00:00:00' -not -newermt '01 jan 2012 00:00:00' -delete


+-----------------------------------------------------------+
|															|
|	FIND LOCKS ON FILES										|
|															|
+-----------------------------------------------------------+ 
	lsof +g | grep sailpoint.log | sed "s/[a-z]\+\s\+\([0-9]\+\)\s.*/\\1/" | xargs ps


+-----------------------------------------------------------+
|															|
|	FILE ENCODING											|
|															|
+-----------------------------------------------------------+
	#Text editor
		vim file
		:set bomb
		:set fileencoding=utf-8
		:wq

		:set encoding=latin1


+-----------------------------------------------------------+
|															|
|	JQ														|
|															|
+-----------------------------------------------------------+
	cat fileName.json | jq -c '. | select(.)' #if this works then json file is correct
	cat fileName.json | jq -c '.groups.name[] | select(.)'
	cat fileName.json | jq -c '.groups.name[] | select(.=="valueToFind")'
	cat fileName.json | jq -c '.groups[] | select(.name=="valueToFind")'


+-----------------------------------------------------------+
|															|
|	TR														|
|															|
+-----------------------------------------------------------+
	cat fileName.json | tr ‘\r\n’ ‘ ’ | jq .
	

+-----------------------------------------------------------+
|															|
|	RECODE													|
|															|
+-----------------------------------------------------------+
	#from hebrew to entity
		echo 'טסט מחרוזת' |recode ..html
	#from entity to hebrew	
		echo 'ffff- &#1504' | recode html..utf8

+-----------------------------------------------------------+
|															|
|	PERMISSIONS OCTAL PRESENTATION							|
|															|
+-----------------------------------------------------------+	
	stat -c '%A %a %n' /etc/passwd


+-----------------------------------------------------------+
|															|
|	LS														|
|															|
+-----------------------------------------------------------+	
	ls -ltr --block-size=M
	

+-----------------------------------------------------------+
|															|
|	SIZE													|
|															|
+-----------------------------------------------------------+
	#disk space usage in linux
		df -H 

	#size of directory
		du -sh /opt/testDir 
	

+-----------------------------------------------------------+
|															|
|				SORT FILES BY SIZE IN DIRECTORY				|
|															|
+-----------------------------------------------------------+
	#native
		ls -lSh
	#reverse
		ls -lShr
	
	
+-----------------------------------------------------------+
|															|
|	FIND FILES LARGER THAN 4G								|
|															|
+-----------------------------------------------------------+
	find . -type f -size +4G


+-----------------------------------------------------------+
|															|
|	TAR														|
|															|
+-----------------------------------------------------------+
	#CREATE
		tar cvf name_of_archive.tar dirname/
	#UNTAR
		tar cvf name_of_archive.tar


+-----------------------------------------------------------+
|															|
|	FIND CLASSES IN JARS									|
|															|
+-----------------------------------------------------------+
	find . -name '*.jar' -exec sh -c 'export i; for i do     zipinfo -1 "$i" | awk '\''/SignonEJB.*\.class$/{       print ENVIRON["i"] ": " $0}'\''; done' sh {} +


+---------------------------------------------------+
|													|
|	number of rows in file							|
|													|
+---------------------------------------------------+
	find . -name "*.xml" | xargs wc -l | sort -n


+---------------------------------------------------+
|                                                   |
|	CHECK JAVA THREADS								|
|													|
+---------------------------------------------------+
	jps //Check running java process IDs. 'Bootstrap' = test server
	top -H -p <pid> //See running threads for the java process with CPU/MEM for each thread 
	
	
+---------------------------------------------------+
|                       							|
|   GREP SEARCH IN FILES							|
|													|
+---------------------------------------------------+
	grep -rI testTempReplacement *
	grep -rI value=\"sdsadasdas\" *
	
	tail -f log_file.log | grep subject_string
	find . -cnewer log_file.log | xargs grep "subject_string"	
	grep -Rnw . -e 'testCertificationRemediation'
	
+---------------------------------------------------+
|													|
|	REMOVE ONLY FILES FROM CURRENT DIRECTORY        |
|                                                   |
+---------------------------------------------------+
	find . -maxdepth 1 -type f -print0 | xargs -0 rm


+---------------------------------------------------+
|													|
|	DATAMASH										|
|													|
+---------------------------------------------------+
	ping -c 100 DC-ITEAM-1.MEHMAIL.LOC  | sed -rn 's|.*=([0-9]+\.?[0-9]+?) ms|\1|p' | LC_ALL=C datamash median 1 perc 1
	ping -c 100 testdb01p.mehmail.loc | sed -rn 's|.*=([0-9]+\.?[0-9]+?) ms|\1|p' | LC_ALL=C datamash median 1 perc 1
	ping -c 100 SAPR3APP01.mehmail.loc | sed -rn 's|.*=([0-9]+\.?[0-9]+?) ms|\1|p' | LC_ALL=C datamash median 1 perc 1
	ping -c 100 sapgwp01.mehmail.loc | sed -rn 's|.*=([0-9]+\.?[0-9]+?) ms|\1|p' | LC_ALL=C datamash median 1 perc 1
	ping -c 100 sapsrmp01.mehmail.loc | sed -rn 's|.*=([0-9]+\.?[0-9]+?) ms|\1|p' | LC_ALL=C datamash median 1 perc 1
	ping -c 100 BI4PROD | sed -rn 's|.*=([0-9]+\.?[0-9]+?) ms|\1|p' | LC_ALL=C datamash median 1 perc 1
 

+---------------------------------------------------+
|													|
|	FIND JAVA CLASSES								|
|													|
+---------------------------------------------------+
	for i in *.jar; do jar -tvf "$i" | grep -Hsi ClassName && echo "$i"; done
   

+---------------------------------------------------+
|                                                   |
|	SIZE OF DIRECTORY								|
|													|
+---------------------------------------------------+
	du -sh /opt/test/test/logs
ls -ltr --block-size=M
               

+---------------------------------------------------+
|                                                   |
|	SORT FILES BY SIZE IN DIRECTORY IN REVERSE      |
|													|
+---------------------------------------------------+
	ls -lShr

 

+---------------------------------------------------+
|													|
|	SORT FILES BY SIZE IN DIRECTORY IN NATIVE		|
|													|
+---------------------------------------------------+
	ls -lSh

+---------------------------------------------------+
|													|
|	TOMCAT VERSION									|
|													|
+---------------------------------------------------+
	cd /opt/<tomcat_dir>/lib
	java -cp catalina.jar org.apache.catalina.util.ServerInfo

+---------------------------------------------------+
|													|
|	LINUX VERSION									|
|													|
+---------------------------------------------------+
	linux version: lsb_release -a
	kernel version: uname -r
	

+---------------------------------------------------+
|													|
|	NUMBER CPU										|
|													|
+---------------------------------------------------+	
	cat /proc/meminfo


+---------------------------------------------------+
|   												|
|	LIST BACKGROUND JOBS							|
|													|
+---------------------------------------------------+
	-bash-4.2$ jobs
	example output: [1]+  Stopped                 rlwrap ./iiq console
 

+---------------------------------------------------+
|													|
|	BRING JOB FOREGROUND							|
|                                                   |
+---------------------------------------------------+
	fg %2 


+---------------------------------------------------+
|													|
|	CREATE TAR										|
|													|
+---------------------------------------------------+
	tar cvf iiqVanaila.tar identityiq/
 

+---------------------------------------------------+
|													|
|	CREATE TAR OF ENTIRE DIRECTORY					|
|	(tar everything in specific directory)			|
|													|
+---------------------------------------------------+
	tar -cvf iiq_8_4.tar -C /test/webapps/iiq $(ls -A /test/webapps/iiq)
	

+---------------------------------------------------+
|                                                   |
|	UNTAR											|
|                                                   |
+---------------------------------------------------+
	tar  xvf /var/tmp/iiqTmpt.tar --directory /opt/test/test90/webapps


+---------------------------------------------------+
|													|
|	UNTAR OF ENTIRE DIRECTORY						|
|	(untar everything in specific directory)		|
|													|
+---------------------------------------------------+
	mkdir /var/tmp/iiq
	tar  xvf /var/tmp/iiq_8_4.tar --directory /var/tmp/iiq
	cp -r iiq /opt/webapps 


+---------------------------------------------------+
|													|
|	AVAILABLE RAM									|
|													|
+---------------------------------------------------+

##IT HAS 8GB

	free -mh
				total        used        free      shared  buff/cache   available
	Mem:           7.6G        7.3G        152M        2.6M        163M         96M
	Swap:           15G         15G        786M

 

##IT HAS 32GB

	free -mh

				total        used        free      shared  buff/cache   available
	Mem:            31G         24G        2.2G        1.0G        4.8G        5.6G
	Swap:           15G        671M         15G

 

+---------------------------------------------------+
|   												|
|	SEARCH FOR STRING IN FILES						|
|													|
+---------------------------------------------------+
	
	

+---------------------------------------------------+
|													|
|	JAVA 11											|
|													|
+---------------------------------------------------+

	tar xf jdk-11.0.20_linux-x64_bin.tar.gz -C /opt
	export JAVA_HOME=/opt/jdk-11.0.20
	export PATH=${PATH}:${JAVA_HOME}/bin