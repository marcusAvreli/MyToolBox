+-----------------------------------------------------------+
|															|
|	AFTER :=,\t,= 											|
|															|
+-----------------------------------------------------------+
/*
semicolon equal,tab, equal SIGN
*/
	:=([^:=]+)$
	\t([^\t]+)$
	=([^=]+)$

+-----------------------------------------------------------+
|															|
|	BEFORE :=,\t,= 											|
|															|
+-----------------------------------------------------------+
/*
semicolon equal,tab, equal SIGN
*/

	^.*[ ,:=]+
	^.*[ ,\t]+

+-----------------------------------------------------------+
|															|
|	KEEP SINGLE SPACE BETWEEN STRING						|
|															|
+-----------------------------------------------------------+

	find what: ^ +| +$|( )+
	replace with: $1

+-----------------------------------------------------------+
|															|
|	CONVERT ALL CHARACTERS TO UPPER CASE					|
|															|
+-----------------------------------------------------------+
	find what: ([a-zA-Z]*)
	replace with: \U\1
	

+-----------------------------------------------------------+
|															|
|	ADD LEADING ZEROS										|
|															|
+-----------------------------------------------------------+
	Search for: ^
	Replace with: 00000000
	If you have leading spaces then use search for: ^ *

	Thatâ€™ll put eight zeroes at the front of all lines

	The second search/replace is:
	Search for: ^[0]+([0-9]{8})$
	Replace with: \1
	
+-----------------------------------------------------------+
|															|
|	TO ADD "); AT THE END OF ROW							|
|															|
+-----------------------------------------------------------+
	FindWhat: ^(.*)$
	ReplaceWith: \1"\);
	
	
+-----------------------------------------------------------+
|															|
|	FIND KEY VALUE PAIR IN XML								|
|															|
+-----------------------------------------------------------+
	id="(.*?)"
	created="(.*?)"
	modified="(.*?)"


+-----------------------------------------------------------+
|															|
|	FIND LEADING ZEROES										|
|															|
+-----------------------------------------------------------+
	^0+(?!$)	

+-----------------------------------------------------------+
|															|
|	FIND CONTENT OF HTML TAG								|
|															|
+-----------------------------------------------------------+
	<Description>(.*?)<\/Description>


+-----------------------------------------------------------+
|															|
|	FIND TABS												|
|															|
+-----------------------------------------------------------+
	[\t]+$
	[\f\t\v]$


+-----------------------------------------------------------+
|															|
|	CONVERT COLUMN TO ROW									|
|															|
+-----------------------------------------------------------+

	Find what: (.+)\r\n(.+)\r\n(.+) 
	Replace with: \1\t\2\t\3\t

	Find What: (.+)\r\n
	Replace With: \1\t

+-----------------------------------------------------------+
|															|
|	FIND value="something" AS WHOLE							|
|															|
+-----------------------------------------------------------+
	value="(.[^"]+)"


+-----------------------------------------------------------+
|															|
|	FIND NUMBER OF TWO OR THREE DIGITS						|
|															|
+-----------------------------------------------------------+
	[0-9]{2,3} 


+-----------------------------------------------------------+
|															|
|	FIND QUOTED VALUES										|
|															|
+-----------------------------------------------------------+
	"(.*?)"

+-----------------------------------------------------------+
|															|
|	FIND TEXT BETWEEN QUOTES								|
|															|
+-----------------------------------------------------------+

	(?<=")[^"]+(?=")

Find Strings without any quotes 
	^[^'"]*$
	
Regex find last n chars in string
.{2}$

Remove empty lines
In the Find what zone, type ^\R ( for exact empty lines) or ^\h*\R ( for empty lines with blanks, only).

convert row to column
       input: name=="test1" || name=="test2"
       
       output:
              name=="test1" || 
              name=="test2"
             
       in notepad++
      
       findWhat:  name=="(.*?)"
      replaceWith: \n name=="$1"
      
convert column to row in notepad++
      control+A
      control+J

convert column to row by regex
	Find what: \R
	Replace with: <empty>

named group
	Input Text
	This is a test 100 9999 22
	
Regular Expression

	(?(\b\d+\b)            # If it is a number
	  (?(\b\d{1,3}\b)      # Then If it is 1-3 digits
		(?<Number>\b\d+\b) # Capture to the Number named group
	   |
		(?<TooBig>[^\s]*)  # Too big of a number. 
	   )
	 |                     # Or from the first if
	  (?<Word>[^\s.!?]*)   # It is a word
	)
	(?:\s?|$|[.?!])        # Capture but don't match the nonwords.

find exactly three digits
	\b\d{3}\b

add pipe at the end of column strings
	string1
	string2 


	^(.*)$

	\1\\\|

Result is 
	string1\
	string2\

SPLIT A STRING BY COMMAS BUT IGNORE COMMAS WITHIN DOUBLE-QUOTES (CSV WITH EMBEDDED COMMAS)
	https://stackoverflow.com/questions/11456850/split-a-string-by-commas-but-ignore-commas-within-double-quotes-using-javascript
	(".*?"|[^",\s]+)(?=\s*,|\s*$)
	
	
find everything after := sign

(([\\:])=(.*?))$


 

 VI


 %s/FIND_WHAT/REPLACE_WITH/g

 

 
DISTINGUISHED NAME
^((CN=([^,]*)),)?((((?:CN|OU)=[^,]+,?)+),)?((DC=[^,]+,?)+)